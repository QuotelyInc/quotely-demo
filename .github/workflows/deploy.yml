name: Deploy to Vercel
on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - preview
          - development

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Quotely Platform
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Run linter
        run: npm run lint || true
        continue-on-error: true
        
      - name: Run tests
        run: npm run test:ci || true
        continue-on-error: true
        
      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_OTTO_UUID: ${{ secrets.NEXT_PUBLIC_OTTO_UUID }}
          NEXT_PUBLIC_OTTO_ENABLED: true
          NEXT_PUBLIC_SITE_URL: https://tryquotely.com
          
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Link Vercel Project
        run: |
          vercel link --yes --project=quotely-platform --scope=quotelys-projects-93b374b6 --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ github.event.inputs.environment || 'production' }} --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Deploy to Vercel (Production)
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Deploy to Vercel (Preview)
        if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/main'
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Comment PR with deployment URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = process.env.VERCEL_URL;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ Deployment ready at: ${deploymentUrl}`
            })
            
      - name: Send deployment notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ Quotely deployed successfully to production"
          else
            echo "‚ùå Quotely deployment failed"
          fi